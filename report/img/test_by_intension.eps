%!PS-Adobe-3.0 EPSF-3.0
%%Creator: MATLAB, The MathWorks, Inc. Version 7.11.0.584 (R2010b). Operating System: Microsoft Windows 7.
%%Title: C:\Users\ALMAZ\Documents\cpp_proj\acronis\report\img\test_by_intension.eps
%%CreationDate: 11/07/2015  13:57:49
%%DocumentNeededFonts: Helvetica
%%DocumentProcessColors: Cyan Magenta Yellow Black
%%LanguageLevel: 2
%%Pages: 1
%%BoundingBox:    87   262   507   578
%%EndComments

%%BeginProlog
% MathWorks dictionary
/MathWorks 160 dict begin
% definition operators
/bdef {bind def} bind def
/ldef {load def} bind def
/xdef {exch def} bdef
/xstore {exch store} bdef
% operator abbreviations
/c  /clip ldef
/cc /concat ldef
/cp /closepath ldef
/gr /grestore ldef
/gs /gsave ldef
/mt /moveto ldef
/np /newpath ldef
/cm /currentmatrix ldef
/sm /setmatrix ldef
/rm /rmoveto ldef
/rl /rlineto ldef
/s {show newpath} bdef
/sc {setcmykcolor} bdef
/sr /setrgbcolor ldef
/sg /setgray ldef
/w /setlinewidth ldef
/j /setlinejoin ldef
/cap /setlinecap ldef
/rc {rectclip} bdef
/rf {rectfill} bdef
% page state control
/pgsv () def
/bpage {/pgsv save def} bdef
/epage {pgsv restore} bdef
/bplot /gsave ldef
/eplot {stroke grestore} bdef
% orientation switch
/portraitMode 0 def /landscapeMode 1 def /rotateMode 2 def
% coordinate system mappings
/dpi2point 0 def
% font control
/FontSize 0 def
/FMS {/FontSize xstore findfont [FontSize 0 0 FontSize neg 0 0]
  makefont setfont} bdef
/ISOLatin1Encoding where {pop /WindowsLatin1Encoding 256 array bdef
ISOLatin1Encoding WindowsLatin1Encoding copy pop
/.notdef/.notdef/quotesinglbase/florin/quotedblbase/ellipsis/dagger
/daggerdbl/circumflex/perthousand/Scaron/guilsinglleft/OE/.notdef/.notdef
/.notdef/.notdef/quoteleft/quoteright/quotedblleft/quotedblright/bullet
/endash/emdash/tilde/trademark/scaron/guilsinglright/oe/.notdef/.notdef
/Ydieresis WindowsLatin1Encoding 128 32 getinterval astore pop}
{/WindowsLatin1Encoding StandardEncoding bdef} ifelse
/reencode {exch dup where {pop load} {pop StandardEncoding} ifelse
  exch dup 3 1 roll findfont dup length dict begin
  { 1 index /FID ne {def}{pop pop} ifelse } forall
  /Encoding exch def currentdict end definefont pop} bdef
/isroman {findfont /CharStrings get /Agrave known} bdef
/FMSR {3 1 roll 1 index dup isroman {reencode} {pop pop} ifelse
  exch FMS} bdef
/csm {1 dpi2point div -1 dpi2point div scale neg translate
 dup landscapeMode eq {pop -90 rotate}
  {rotateMode eq {90 rotate} if} ifelse} bdef
% line types: solid, dotted, dashed, dotdash
/SO { [] 0 setdash } bdef
/DO { [.5 dpi2point mul 4 dpi2point mul] 0 setdash } bdef
/DA { [6 dpi2point mul] 0 setdash } bdef
/DD { [.5 dpi2point mul 4 dpi2point mul 6 dpi2point mul 4
  dpi2point mul] 0 setdash } bdef
% macros for lines and objects
/L {lineto stroke} bdef
/MP {3 1 roll moveto 1 sub {rlineto} repeat} bdef
/AP {{rlineto} repeat} bdef
/PDlw -1 def
/W {/PDlw currentlinewidth def setlinewidth} def
/PP {closepath eofill} bdef
/DP {closepath stroke} bdef
/MR {4 -2 roll moveto dup  0 exch rlineto exch 0 rlineto
  neg 0 exch rlineto closepath} bdef
/FR {MR stroke} bdef
/PR {MR fill} bdef
/L1i {{currentfile picstr readhexstring pop} image} bdef
/tMatrix matrix def
/MakeOval {newpath tMatrix currentmatrix pop translate scale
0 0 1 0 360 arc tMatrix setmatrix} bdef
/FO {MakeOval stroke} bdef
/PO {MakeOval fill} bdef
/PD {currentlinewidth 2 div 0 360 arc fill
   PDlw -1 eq not {PDlw w /PDlw -1 def} if} def
/FA {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arc tMatrix setmatrix stroke} bdef
/PA {newpath tMatrix currentmatrix pop	translate 0 0 moveto scale
  0 0 1 5 -2 roll arc closepath tMatrix setmatrix fill} bdef
/FAn {newpath tMatrix currentmatrix pop translate scale
  0 0 1 5 -2 roll arcn tMatrix setmatrix stroke} bdef
/PAn {newpath tMatrix currentmatrix pop translate 0 0 moveto scale
  0 0 1 5 -2 roll arcn closepath tMatrix setmatrix fill} bdef
/vradius 0 def /hradius 0 def /lry 0 def
/lrx 0 def /uly 0 def /ulx 0 def /rad 0 def
/MRR {/vradius xdef /hradius xdef /lry xdef /lrx xdef /uly xdef
  /ulx xdef newpath tMatrix currentmatrix pop ulx hradius add uly
  vradius add translate hradius vradius scale 0 0 1 180 270 arc 
  tMatrix setmatrix lrx hradius sub uly vradius add translate
  hradius vradius scale 0 0 1 270 360 arc tMatrix setmatrix
  lrx hradius sub lry vradius sub translate hradius vradius scale
  0 0 1 0 90 arc tMatrix setmatrix ulx hradius add lry vradius sub
  translate hradius vradius scale 0 0 1 90 180 arc tMatrix setmatrix
  closepath} bdef
/FRR {MRR stroke } bdef
/PRR {MRR fill } bdef
/MlrRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lry uly sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 90 270 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 270 90 arc tMatrix setmatrix
  closepath} bdef
/FlrRR {MlrRR stroke } bdef
/PlrRR {MlrRR fill } bdef
/MtbRR {/lry xdef /lrx xdef /uly xdef /ulx xdef /rad lrx ulx sub 2 div def
  newpath tMatrix currentmatrix pop ulx rad add uly rad add translate
  rad rad scale 0 0 1 180 360 arc tMatrix setmatrix lrx rad sub lry rad
  sub translate rad rad scale 0 0 1 0 180 arc tMatrix setmatrix
  closepath} bdef
/FtbRR {MtbRR stroke } bdef
/PtbRR {MtbRR fill } bdef
/stri 6 array def /dtri 6 array def
/smat 6 array def /dmat 6 array def
/tmat1 6 array def /tmat2 6 array def /dif 3 array def
/asub {/ind2 exch def /ind1 exch def dup dup
  ind1 get exch ind2 get sub exch } bdef
/tri_to_matrix {
  2 0 asub 3 1 asub 4 0 asub 5 1 asub
  dup 0 get exch 1 get 7 -1 roll astore } bdef
/compute_transform {
  dmat dtri tri_to_matrix tmat1 invertmatrix 
  smat stri tri_to_matrix tmat2 concatmatrix } bdef
/ds {stri astore pop} bdef
/dt {dtri astore pop} bdef
/db {2 copy /cols xdef /rows xdef mul dup 3 mul string
  currentfile 
  3 index 0 eq {/ASCIIHexDecode filter}
  {/ASCII85Decode filter 3 index 2 eq {/RunLengthDecode filter} if }
  ifelse exch readstring pop
  dup 0 3 index getinterval /rbmap xdef
  dup 2 index dup getinterval /gbmap xdef
  1 index dup 2 mul exch getinterval /bbmap xdef pop pop}bdef
/it {gs np dtri aload pop moveto lineto lineto cp c
  cols rows 8 compute_transform 
  rbmap gbmap bbmap true 3 colorimage gr}bdef
/il {newpath moveto lineto stroke}bdef
currentdict end def
%%EndProlog

%%BeginSetup
MathWorks begin

0 cap

end
%%EndSetup

%%Page: 1 1
%%BeginPageSetup
%%PageBoundingBox:    87   262   507   578
MathWorks begin
bpage
%%EndPageSetup

%%BeginObject: obj1
bplot

/dpi2point 12 def
portraitMode 1044 6936 csm

    0     0  5045  3782 rc
85 dict begin %Colortable dictionary
/c0 { 0.000000 0.000000 0.000000 sr} bdef
/c1 { 1.000000 1.000000 1.000000 sr} bdef
/c2 { 0.900000 0.000000 0.000000 sr} bdef
/c3 { 0.000000 0.820000 0.000000 sr} bdef
/c4 { 0.000000 0.000000 0.800000 sr} bdef
/c5 { 0.910000 0.820000 0.320000 sr} bdef
/c6 { 1.000000 0.260000 0.820000 sr} bdef
/c7 { 0.000000 0.820000 0.820000 sr} bdef
c0
1 j
1 sg
   0    0 5046 3783 rf
6 w
0 3082 3910 0 0 -3082 656 3366 4 MP
PP
-3910 0 0 3082 3910 0 0 -3082 656 3366 5 MP stroke
4 w
DO
SO
6 w
0 sg
 656  284 mt 4566  284 L
 656 3366 mt 4566 3366 L
4566 3366 mt 4566  284 L
 656 3366 mt  656  284 L
 656 3366 mt 4566 3366 L
 656 3366 mt  656  284 L
 818 3366 mt  818 3326 L
 818  284 mt  818  323 L
%%IncludeResource: font Helvetica
/Helvetica /WindowsLatin1Encoding 120 FMSR

 752 3511 mt 
(50) s
1633 3366 mt 1633 3326 L
1633  284 mt 1633  323 L
1533 3511 mt 
(100) s
2448 3366 mt 2448 3326 L
2448  284 mt 2448  323 L
2348 3511 mt 
(150) s
3262 3366 mt 3262 3326 L
3262  284 mt 3262  323 L
3162 3511 mt 
(200) s
4077 3366 mt 4077 3326 L
4077  284 mt 4077  323 L
3977 3511 mt 
(250) s
 656 3366 mt  695 3366 L
4566 3366 mt 4526 3366 L
 555 3410 mt 
(0) s
 656 3057 mt  695 3057 L
4566 3057 mt 4526 3057 L
 555 3101 mt 
(5) s
 656 2749 mt  695 2749 L
4566 2749 mt 4526 2749 L
 488 2793 mt 
(10) s
 656 2441 mt  695 2441 L
4566 2441 mt 4526 2441 L
 488 2485 mt 
(15) s
 656 2133 mt  695 2133 L
4566 2133 mt 4526 2133 L
 488 2177 mt 
(20) s
 656 1825 mt  695 1825 L
4566 1825 mt 4526 1825 L
 488 1869 mt 
(25) s
 656 1516 mt  695 1516 L
4566 1516 mt 4526 1516 L
 488 1560 mt 
(30) s
 656 1208 mt  695 1208 L
4566 1208 mt 4526 1208 L
 488 1252 mt 
(35) s
 656  900 mt  695  900 L
4566  900 mt 4526  900 L
 488  944 mt 
(40) s
 656  592 mt  695  592 L
4566  592 mt 4526  592 L
 488  636 mt 
(45) s
 656  284 mt  695  284 L
4566  284 mt 4526  284 L
 488  328 mt 
(50) s
 656  284 mt 4566  284 L
 656 3366 mt 4566 3366 L
4566 3366 mt 4566  284 L
 656 3366 mt  656  284 L
gs 656 284 3911 3083 rc
gr

/c8 { 1.000000 0.000000 0.000000 sr} bdef
c8
 782 3118 mt  854 3118 L
 818 3082 mt  818 3154 L
 945 3110 mt 1017 3110 L
 981 3074 mt  981 3146 L
1108 3101 mt 1180 3101 L
1144 3065 mt 1144 3137 L
1271 3092 mt 1343 3092 L
1307 3056 mt 1307 3128 L
1434 3081 mt 1506 3081 L
1470 3045 mt 1470 3117 L
1597 3069 mt 1669 3069 L
1633 3033 mt 1633 3105 L
1760 3056 mt 1832 3056 L
1796 3020 mt 1796 3092 L
1923 3041 mt 1995 3041 L
1959 3005 mt 1959 3077 L
2086 3025 mt 2158 3025 L
2122 2989 mt 2122 3061 L
2249 3006 mt 2321 3006 L
2285 2970 mt 2285 3042 L
2412 2984 mt 2484 2984 L
2448 2948 mt 2448 3020 L
2575 2958 mt 2647 2958 L
2611 2922 mt 2611 2994 L
2737 2928 mt 2809 2928 L
2773 2892 mt 2773 2964 L
2900 2893 mt 2972 2893 L
2936 2857 mt 2936 2929 L
3063 2850 mt 3135 2850 L
3099 2814 mt 3099 2886 L
3226 2796 mt 3298 2796 L
3262 2760 mt 3262 2832 L
3389 2729 mt 3461 2729 L
3425 2693 mt 3425 2765 L
3552 2640 mt 3624 2640 L
3588 2604 mt 3588 2676 L
3715 2518 mt 3787 2518 L
3751 2482 mt 3751 2554 L
3878 2343 mt 3950 2343 L
3914 2307 mt 3914 2379 L
4041 2068 mt 4113 2068 L
4077 2032 mt 4077 2104 L
4204 1571 mt 4276 1571 L
4240 1535 mt 4240 1607 L
4367  407 mt 4439  407 L
4403  371 mt 4403  443 L
 793 3093 mt  843 3143 L
 843 3093 mt  793 3143 L
 956 3085 mt 1006 3135 L
1006 3085 mt  956 3135 L
1119 3076 mt 1169 3126 L
1169 3076 mt 1119 3126 L
1282 3067 mt 1332 3117 L
1332 3067 mt 1282 3117 L
1445 3056 mt 1495 3106 L
1495 3056 mt 1445 3106 L
1608 3044 mt 1658 3094 L
1658 3044 mt 1608 3094 L
1771 3031 mt 1821 3081 L
1821 3031 mt 1771 3081 L
1934 3016 mt 1984 3066 L
1984 3016 mt 1934 3066 L
2097 3000 mt 2147 3050 L
2147 3000 mt 2097 3050 L
2260 2981 mt 2310 3031 L
2310 2981 mt 2260 3031 L
2423 2959 mt 2473 3009 L
2473 2959 mt 2423 3009 L
2586 2933 mt 2636 2983 L
2636 2933 mt 2586 2983 L
2748 2903 mt 2798 2953 L
2798 2903 mt 2748 2953 L
2911 2868 mt 2961 2918 L
2961 2868 mt 2911 2918 L
3074 2825 mt 3124 2875 L
3124 2825 mt 3074 2875 L
3237 2771 mt 3287 2821 L
3287 2771 mt 3237 2821 L
3400 2704 mt 3450 2754 L
3450 2704 mt 3400 2754 L
3563 2615 mt 3613 2665 L
3613 2615 mt 3563 2665 L
3726 2493 mt 3776 2543 L
3776 2493 mt 3726 2543 L
3889 2318 mt 3939 2368 L
3939 2318 mt 3889 2368 L
4052 2043 mt 4102 2093 L
4102 2043 mt 4052 2093 L
4215 1546 mt 4265 1596 L
4265 1546 mt 4215 1596 L
4378  382 mt 4428  432 L
4428  382 mt 4378  432 L
gs 656 284 3911 3083 rc
gr

24 W
0 sg
818 2848 PD
24 W
981 2833 PD
24 W
1144 2816 PD
24 W
1307 2798 PD
24 W
1470 2779 PD
24 W
1633 2757 PD
24 W
1796 2734 PD
24 W
1959 2709 PD
24 W
2122 2681 PD
24 W
2285 2650 PD
24 W
2448 2617 PD
24 W
2611 2581 PD
24 W
2773 2540 PD
24 W
2936 2494 PD
24 W
3099 2444 PD
24 W
3262 2387 PD
24 W
3425 2320 PD
24 W
3588 2246 PD
24 W
3751 2158 PD
24 W
3914 2058 PD
24 W
4077 1939 PD
24 W
4240 1794 PD
24 W
4403 1613 PD
gs 656 284 3911 3083 rc
gr

/c9 { 0.000000 0.000000 1.000000 sr} bdef
c9
  36   36  818 2927 FO
  36   36  981 2915 FO
  36   36 1144 2902 FO
  36   36 1307 2887 FO
  36   36 1470 2872 FO
  36   36 1633 2855 FO
  36   36 1796 2837 FO
  36   36 1959 2817 FO
  36   36 2122 2795 FO
  36   36 2285 2771 FO
  36   36 2448 2745 FO
  36   36 2611 2717 FO
  36   36 2773 2684 FO
  36   36 2936 2649 FO
  36   36 3099 2609 FO
  36   36 3262 2565 FO
  36   36 3425 2513 FO
  36   36 3588 2455 FO
  36   36 3751 2388 FO
  36   36 3914 2310 FO
  36   36 4077 2217 FO
  36   36 4240 2107 FO
  36   36 4403 1973 FO
gs 656 284 3911 3083 rc
gr

0 sg
2143 3654 mt 
(Poisson intension) s
 406 2318 mt  -90 rotate
(Average seek time) s
90 rotate
1529  189 mt 
(Average seek time for various algorithms) s
 639 3409 mt 
( ) s
4550  326 mt 
( ) s
1 sg
0 480 1468 0 0 -480 716 824 4 MP
PP
-1468 0 0 480 1468 0 0 -480 716 824 5 MP stroke
4 w
DO
SO
6 w
0 sg
 716  344 mt 2184  344 L
 716  824 mt 2184  824 L
2184  824 mt 2184  344 L
 716  824 mt  716  344 L
 716  824 mt 2184  824 L
 716  824 mt  716  344 L
 716  344 mt 2184  344 L
 716  824 mt 2184  824 L
2184  824 mt 2184  344 L
 716  824 mt  716  344 L
1190  479 mt 
(FCFS) s
gs 716 344 1469 481 rc
gs 898 363 147 147 rc
c8
 935  436 mt 1007  436 L
 971  400 mt  971  472 L
 946  411 mt  996  461 L
 996  411 mt  946  461 L
gr

c8
gr

c8
0 sg
1190  627 mt 
(SSF) s
gs 716 344 1469 481 rc
gs 898 511 147 147 rc
24 W
971 584 PD
gr

gr

1190  775 mt 
(Elevator algorithm) s
gs 716 344 1469 481 rc
gs 898 658 147 147 rc
c9
  36   36  971  731 FO
gr

c9
gr

c9

end %%Color Dict

eplot
%%EndObject

epage
end

showpage

%%Trailer
%%EOF
